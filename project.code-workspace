{

	// Folders included in this workspace.
	"folders": [

		// Project folder:
		{
			//"name": "Project",
			"path": "."
		},

		// Reference folders (Windows and Linux-relative paths)
		{
			"name": "Reference (Windows)",
			"path": "P:\\_Reference"
		},
		{
			"name": "Reference (Linux)",
			"path": "/mnt/p/_Reference"
		},
	],

	// Settings applied to all folders in this workspace.
	"settings": {

		// Read-only files:
		"files.readonlyInclude": {
			// Reference folders
			"P:/_Reference/**": true,
			"/mnt/p/_Reference/**": true,
			// Build output
			"**/build/**": false,
			"**/.venv*/**": false,
			// License
			"**/LICENSE.txt": true,
			// Git may break if any of these are modified:
			"**/.gitconfig": true,
			"**/.mgmt/**": true,
			// Folder settings are automatically generated by extension: franmastromarino.vs-code-settings-os
			"**/settings.json": false,
			// Specific filetypes:
			"**/*.pdf": true,
		},

		// Files/folders to exclude from Search:
		"search.exclude": {
			// Reference folders
			"P:/_Reference/**": true,
			"/mnt/p/_Reference/**": true,
			// Build output
			"**/build/**": true,
			"**/.venv*/**": true,
			// License
			"**/LICENSE.txt": true,
			// Git may break if any of these are modified:
			"**/.gitconfig": true,
			"**/.mgmt": true,
			// Folder settings are automatically generated by extension: franmastromarino.vs-code-settings-os
			"**/settings.json": true,
			// Specific filetypes:
			"**/*.pdf": true,
		},

		// Files/folders to exclude from watching:
		"files.watcherExclude": {
			// Reference folders
			"P:/_Reference/**": true,
			"/mnt/p/_Reference/**": true,
			// Build output
			"**/build/**": true,
			"**/.venv*/**": true,
		},

		"terminal.integrated.cwd": "${fileWorkspaceFolder}",

		// Linux Terminals
		"terminal.integrated.profiles.linux": {
			"Bash": {
				"path": "bash",
				"args": [],
				"overrideName": true,
				"icon": "terminal-bash"
			},
			"Python (VENV)": {
				"path": "bash",
    			"args": [
    				"-c",
    				"read -p 'Python VENV: ' -r venv ; $venv ; echo '' ; ${workspaceFolder}/.venv.linux/bin/python "
    			],
				"overrideName": true,
				"icon": "symbol-package"
			},
		},
		"terminal.integrated.env.linux": {
			// "ENVIRONMENT_VARIABLE": "value"
		},
		// "terminal.integrated.defaultProfile.linux": "Bash",

		// Windows Terminals
		"terminal.integrated.profiles.windows": {
			"PowerShell": {
				"source": "PowerShell",
				"args": [],
				"overrideName": true,
				"icon": "terminal-powershell",
			},
			"Command Prompt": {
				"path": [
					"${env:windir}\\Sysnative\\cmd.exe",
					"${env:windir}\\System32\\cmd.exe"
				],
				"args": [],
				"overrideName": true,
				"icon": "terminal-cmd"
			},
			"Git Bash": {
				"source": "Git Bash",
				"args": [],
				"overrideName": true,
				"icon": "terminal-bash"
			},
			"WSL2 (Default Distro)": {
				"path": "C:\\Windows\\System32\\wsl.exe",
				"args": [],
				"overrideName": true,
				"icon": "terminal-bash"
			},
			"Python (VENV)": {
				"source": "PowerShell",
				"overrideName": true,
				"args": [
					"-NoExit",
					"-Command",
					"Read-Host 'Python VENV' | Invoke-Expression ; Write-Host '' ; ${workspaceFolder}\\.venv.windows\\Scripts\\python.exe"
				],
				"icon": "symbol-package"
			},
		},
		"terminal.integrated.env.windows": {
			// "ENVIRONMENT_VARIABLE": "value"
		},
		"powershell.cwd": "p:\\daniel-templates\\template_project",
		// "terminal.integrated.defaultProfile.windows": "PowerShell",

	},
}